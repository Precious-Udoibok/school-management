// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement.Persistence;

#nullable disable

namespace SchoolManagement.Persistence.Migrations
{
    [DbContext(typeof(SchoolManagementDbContext))]
    partial class SchoolManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagement.Domain.College", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lecturer_IDID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Lecturer_IDID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolManagement.Domain.CourseRegistration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LecturerIDID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentIDID")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LecturerIDID");

                    b.HasIndex("StudentIDID");

                    b.ToTable("CourseRegistrations");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("College_IDID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("College_IDID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Hostel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HostelClearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentIDID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentIDID");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Lecturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Department_IdID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courses_taken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Department_IdID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("SchoolManagement.Domain.SchoolPortal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MatricNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentIDID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentIDID");

                    b.ToTable("SchoolPortals");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Department_IDID")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Department_IDID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Course", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Lecturer", "Lecturer_ID")
                        .WithMany()
                        .HasForeignKey("Lecturer_IDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer_ID");
                });

            modelBuilder.Entity("SchoolManagement.Domain.CourseRegistration", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Lecturer", "LecturerID")
                        .WithMany()
                        .HasForeignKey("LecturerIDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Domain.Student", "StudentID")
                        .WithMany()
                        .HasForeignKey("StudentIDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LecturerID");

                    b.Navigation("StudentID");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Department", b =>
                {
                    b.HasOne("SchoolManagement.Domain.College", "College_ID")
                        .WithMany()
                        .HasForeignKey("College_IDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College_ID");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Hostel", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Student", "StudentID")
                        .WithMany()
                        .HasForeignKey("StudentIDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentID");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Lecturer", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Department", "Department_Id")
                        .WithMany()
                        .HasForeignKey("Department_IdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department_Id");
                });

            modelBuilder.Entity("SchoolManagement.Domain.SchoolPortal", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Student", "StudentID")
                        .WithMany()
                        .HasForeignKey("StudentIDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentID");
                });

            modelBuilder.Entity("SchoolManagement.Domain.Student", b =>
                {
                    b.HasOne("SchoolManagement.Domain.Department", "Department_ID")
                        .WithMany()
                        .HasForeignKey("Department_IDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
